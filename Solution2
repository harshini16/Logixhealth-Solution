CREATE TABLE transactions (
    user_id INT ,
    product_id INT,
    transaction_date Date
);

INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (1, 101, '2020-2-12');
INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (2, 105, '2020-2-13');
INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (1, 111, '2020-2-14');
INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (3, 121, '2020-2-15');
INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (1, 101, '2020-2-16');
INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (2, 105, '2020-2-17');
INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (4, 101, '2020-2-16');
INSERT INTO transactions (user_id, product_id, transaction_date) VALUES (3, 105, '2020-2-15');

#SELECT * FROM transactions;

WITH super_users AS (
  SELECT user_id, product_id, transaction_date, 
         ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY product_id DESC, transaction_date DESC) AS row_num,
         count(*) over (partition by user_id) as transaction_count 
  FROM transactions
), 
user_dates AS (
  SELECT user_id, max(transaction_date) as transaction_date
  FROM super_users 
  WHERE row_num=1 and transaction_count >= 2 
  GROUP BY user_id
)
SELECT u.user_id, COALESCE(user_dates.transaction_date, 'Null') as super_user_date 
FROM (SELECT DISTINCT user_id FROM transactions) u 
LEFT JOIN user_dates ON u.user_id = user_dates.user_id 
ORDER BY u.user_id;
